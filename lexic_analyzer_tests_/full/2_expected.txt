RESERVED import
LITERAL_CONSTANT IDState.h
RESERVED import
LITERAL_CONSTANT LexicAnalyzer.h
RESERVED func
IDENTIFIER IDState
PUNCTUATION (
IDENTIFIER LexicAnalyzer
OPERATOR @
IDENTIFIER fsm
PUNCTUATION )
PUNCTUATION :
RESERVED void
PUNCTUATION {
IDENTIFIER state_machine_
PUNCTUATION (
IDENTIFIER fsm
PUNCTUATION )
PUNCTUATION ;
PUNCTUATION }
RESERVED func
IDENTIFIER Execute
PUNCTUATION (
PUNCTUATION )
PUNCTUATION :
RESERVED void
PUNCTUATION {
RESERVED if
PUNCTUATION (
IDENTIFIER isalnum
PUNCTUATION (
IDENTIFIER Peek
PUNCTUATION (
PUNCTUATION )
PUNCTUATION )
OPERATOR or
IDENTIFIER Peek
PUNCTUATION (
PUNCTUATION )
OPERATOR ==
LITERAL_CONSTANT _
PUNCTUATION )
PUNCTUATION {
IDENTIFIER AddNextCharToBuffer
PUNCTUATION (
PUNCTUATION )
PUNCTUATION ;
RESERVED return
PUNCTUATION ;
PUNCTUATION }
RESERVED if
PUNCTUATION (
IDENTIFIER IsReserved
PUNCTUATION (
IDENTIFIER GetBuffer
PUNCTUATION (
PUNCTUATION )
PUNCTUATION )
PUNCTUATION )
PUNCTUATION {
IDENTIFIER AddBufferToQueue
PUNCTUATION (
IDENTIFIER RESERVED
PUNCTUATION )
PUNCTUATION ;
PUNCTUATION }
RESERVED else
PUNCTUATION {
IDENTIFIER AddBufferToQueue
PUNCTUATION (
IDENTIFIER IDENTIFIER
PUNCTUATION )
PUNCTUATION ;
PUNCTUATION }
IDENTIFIER ChangeState
PUNCTUATION (
IDENTIFIER GetBeginState
PUNCTUATION (
PUNCTUATION )
PUNCTUATION )
PUNCTUATION ;
PUNCTUATION }